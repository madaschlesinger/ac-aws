---
- hosts: localhost
  connection: local
  gather_facts: True

  vars_files:
    - vars/vars.yml

  tasks:

  - name: VPC 
    local_action:
      module: ec2_vpc
      state: present
      region: "{{ ec2_region }}"
      cidr_block: "{{ vpc_cidr_block }}"
      subnets:
       - cidr: 172.31.16.0/20
         az: eu-west-1a
         resource_tags: { "Name": "master_subnet_vpc" }
       - cidr: 172.31.48.0/20
         az: eu-west-1a
         register: master_subnet_vpc
         resource_tags: { "Name": "slave_subnet_vpc" }
         register: slave_subnet_vpc
      internet_gateway: "yes"
      route_tables: "{{ vpc_route_tables }}"
      resource_tags: { "Name": "jpmc_vpc" }
      wait: true
    register: vpc

  - name: Mesos security Group
    ec2_group:
      name: Mesos-SG-Master
      description: Security Group for Mesos Master
      vpc_id: "{{ vpc.vpc_id }}"
      region: "{{ ec2_region }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: icmp
          from_port: 8 # icmp type, -1 = any type
          to_port:  -1 # icmp subtype, -1 = any subtype
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443 
          to_port: 443 
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 5000
          to_port: 5000
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 5050 
          to_port: 5050
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: 0.0.0.0/0
        - proto: tcp 
          from_port: 2181
          to_port: 2181
          cidr_ip: 0.0.0.0/0 
        - proto: tcp
          from_port: 5051
          to_port: 5051
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 8500
          to_port: 8500
          cidr_ip: 0.0.0.0/0 
        - proto: tcp
          from_port: 6784
          to_port: 6784
          cidr_ip: 0.0.0.0/0      
        - proto: tcp
          from_port: 6783
          to_port: 6783
          cidr_ip: 0.0.0.0/0
        - proto: udp 
          from_port: 6783
          to_port: 6783
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 8300
          to_port: 8300
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 8301
          to_port: 8301
          cidr_ip: 0.0.0.0/0

  - name: Mesos security Group for Slaves Hosts
    ec2_group:
      name: Mesos-SG-Slaves
      description: Security Group for Mesos Slaves 
      vpc_id: "{{ vpc.vpc_id }}"
      region: "{{ ec2_region }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: all 
          cidr_ip: 172.31.16.0/20
          

  - name: Provision a set of instances for Mesos-Marathon Masters
    ec2:
      key_name: "{{ key_name }}"
      instance_type: t2.micro
      image: "ami-8b8c57f8"
      group: "Mesos-SG-Master"
      wait: true
      region: "{{ ec2_region }}"
      exact_count: "{{ num_master_servers }}"
      vpc_subnet_id: "{{ vpc.subnets[0].id }}"
      assign_public_ip: "{{ assign_public_ip }}"
      count_tag:
         Name: "Mesos-Master-{{ ansible_user_id }}-{{ flavour }}"
      instance_tags:
         Name: "Mesos-Master-{{ ansible_user_id }}-{{ flavour }}"
      user_data: |
         #!/bin/bash 
         echo "Defaults:ec2-user !requiretty" > /etc/sudoers.d/disable_requiretty
    register: masters

  - name: Add all instance public IPs to host group
    add_host: hostname={{ item.public_ip }} groupname=masters
    with_items: masters.instances

  - name: Provision a set of instances for Mesos Slaves
    ec2:
      key_name: "{{ key_name }}"
      instance_type: t2.micro
      image: "ami-8b8c57f8"
      group: "Mesos-SG-Slaves"
      wait: true
      region: "{{ ec2_region }}"
      exact_count: "{{ num_slave_servers }}" 
      vpc_subnet_id: "{{ vpc.subnets[1].id }}" 
      assign_public_ip: "{{ assign_public_ip }}"
      count_tag:
         Name: "Mesos-Slave-{{ ansible_user_id }}-{{ flavour }}"
      instance_tags:
         Name: "Mesos-Slave-{{ ansible_user_id }}-{{ flavour }}"
      user_data: |
         #!/bin/bash 
         echo "Defaults:ec2-user !requiretty" > /etc/sudoers.d/disable_requiretty
    register: slaves

  - name: Add all instance public IPs to host group
    add_host: hostname={{ item.public_ip }} groupname=slaves
    with_items: slaves.instances

  - name: Wait for SSH to come up
    wait_for: host={{ item.public_ip }} port=22 delay=60 timeout=320 state=started
    with_items: masters.instances

  - name: Recap
    debug: var=vpc
